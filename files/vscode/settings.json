{
    "telemetry.telemetryLevel": "off",
    "editor.inlineSuggest.enabled": true,
    "remote.SSH.connectTimeout": 60,
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "remote.SSH.enableRemoteCommand": true,
    "remote.SSH.serverInstallPath": {
        "mujoco210~holy*": "~/.vscode-container/mujoco210",
    },
    "security.workspace.trust.untrustedFiles": "open",
    "github.copilot.enable": {
        "*": true,
        "plaintext": "true",
        "markdown": true,
        "scminput": false
    },
    "zenMode.centerLayout": false,
    "workbench.editor.showTabs": "single",
    "workbench.startupEditor": "none",
    "zenMode.showTabs": "single",
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "editor.minimap.renderCharacters": false,
    "editor.scrollbar.vertical": "hidden",
    "editor.scrollbar.verticalScrollbarSize": 0,
    "latex-workshop.latex.recipes": [
        {
            "name": "pdflatex -> bibtex -> pdflatex * 2",
            "tools": [
                "pdflatex",
                "bibtex",
                "pdflatex",
                "pdflatex"
            ]
        },
        {
            "name": "latexmk",
            "tools": [
                "latexmk"
            ]
        },
        {
            "name": "latexmk (latexmkrc)",
            "tools": [
                "latexmk_rconly"
            ]
        },
        {
            "name": "latexmk (lualatex)",
            "tools": [
                "lualatexmk"
            ]
        },
        {
            "name": "latexmk (xelatex)",
            "tools": [
                "xelatexmk"
            ]
        },
        {
            "name": "Compile Rnw files",
            "tools": [
                "rnw2tex",
                "latexmk"
            ]
        },
        {
            "name": "Compile Jnw files",
            "tools": [
                "jnw2tex",
                "latexmk"
            ]
        },
        {
            "name": "Compile Pnw files",
            "tools": [
                "pnw2tex",
                "latexmk"
            ]
        },
        {
            "name": "tectonic",
            "tools": [
                "tectonic"
            ]
        }
    ],
    "latex-workshop.latex.autoBuild.run": "never",
    "ansible.validation.lint.enabled": false,
    "markdown-preview-github-styles.darkTheme": "dark_dimmed",
    "terminal.integrated.defaultProfile.linux": "tmux",
    "editor.minimap.enabled": false,
    "editor.cursorSurroundingLines": 100000,
    "markdown.preview.breaks": true,
    "oneDarkPro.vivid": true,
    "markdown.extension.print.theme": "dark",
    "editor.autoClosingBrackets": "never",
    "editor.autoClosingDelete": "never",
    "editor.autoClosingQuotes": "never",
    "editor.autoClosingComments": "never",
    "editor.autoClosingOvertype": "never",
    "keyboard.dispatch": "keyCode",
    "window.menuBarVisibility": "toggle",
    "workbench.colorTheme": "One Dark Pro",
    "[yaml]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },  
    "[python]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.codeActionsOnSave": {
            "source.organizeImports.ruff": "explicit",
            "source.fixAll": "explicit",
        }
    },
    "python.languageServer": "Pylance",
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.packageIndexDepths":[
      {
        "name": "reactivex",
        "depth": 3,
        "includeAllSymbols": false
      },
      {
        "name": "rclpy",
        "depth": 2,
        "includeAllSymbols": true
      }
    ],
    // Don't automatically activate the python environment, since there are a lot of them.
    "python.terminal.activateEnvironment": false,

    "[toml]": {
        "editor.formatOnSave": true,
    },

    "ros.distro": "humble",
    "files.associations": {
      "TARGETS": "plaintext",
      "any": "cpp",
      "array": "cpp",
      "atomic": "cpp",
      "bit": "cpp",
      "*.tcc": "cpp",
      "bitset": "cpp",
      "cctype": "cpp",
      "chrono": "cpp",
      "clocale": "cpp",
      "cmath": "cpp",
      "codecvt": "cpp",
      "condition_variable": "cpp",
      "cstdarg": "cpp",
      "cstddef": "cpp",
      "cstdint": "cpp",
      "cstdio": "cpp",
      "cstdlib": "cpp",
      "cstring": "cpp",
      "ctime": "cpp",
      "cwchar": "cpp",
      "cwctype": "cpp",
      "deque": "cpp",
      "forward_list": "cpp",
      "list": "cpp",
      "map": "cpp",
      "set": "cpp",
      "unordered_map": "cpp",
      "vector": "cpp",
      "exception": "cpp",
      "algorithm": "cpp",
      "functional": "cpp",
      "iterator": "cpp",
      "memory": "cpp",
      "memory_resource": "cpp",
      "numeric": "cpp",
      "optional": "cpp",
      "random": "cpp",
      "ratio": "cpp",
      "regex": "cpp",
      "string": "cpp",
      "string_view": "cpp",
      "system_error": "cpp",
      "tuple": "cpp",
      "type_traits": "cpp",
      "utility": "cpp",
      "fstream": "cpp",
      "initializer_list": "cpp",
      "iomanip": "cpp",
      "iosfwd": "cpp",
      "iostream": "cpp",
      "istream": "cpp",
      "limits": "cpp",
      "new": "cpp",
      "ostream": "cpp",
      "shared_mutex": "cpp",
      "sstream": "cpp",
      "stdexcept": "cpp",
      "streambuf": "cpp",
      "cinttypes": "cpp",
      "typeinfo": "cpp",
      "valarray": "cpp",
      "csignal": "cpp",
      "strstream": "cpp",
      "complex": "cpp",
      "mutex": "cpp",
      "thread": "cpp",
      "cfenv": "cpp",
      "typeindex": "cpp",
      "variant": "cpp",
      "compare": "cpp",
      "concepts": "cpp",
      "unordered_set": "cpp",
      "future": "cpp",
      "numbers": "cpp",
      "ranges": "cpp",
      "semaphore": "cpp",
      "stop_token": "cpp"
    },
    "search.followSymlinks": false,
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "cmake.showOptionsMovedNotification": false,
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "cmake.pinnedCommands": [
        "workbench.action.tasks.configureTaskRunner",
        "workbench.action.tasks.runTask"
    ]
}
